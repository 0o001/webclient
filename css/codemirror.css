/* BASICS */
.CodeMirror {
    background-color: var(--stroke-main);
    box-sizing: border-box;
    color: var(--text-color-high);
    direction: ltr;
    font: var(--text-code1);
    height: 100%;
}

/* PADDING */

/* Vertical padding around content */
.CodeMirror-lines {
    padding: 4px 0;
}

/* Horizontal padding of content */
.CodeMirror pre.CodeMirror-line,
.CodeMirror pre.CodeMirror-line-like {
    padding: 0 14px;
}

/* GUTTER */
.CodeMirror-gutters {
    background-color: var(--stroke-main);
    white-space: nowrap;
}
.CodeMirror-linenumber {
    color: var(--label-blue);
    font: var(--text-code1);
    padding: 0 3px 0 5px;
    min-width: 20px;
    text-align: right;
    white-space: nowrap;
}
.CodeMirror-guttermarker {
    color: black;
}
.CodeMirror-guttermarker-subtle {
    color: var(--text-color-low);
}

/* CURSOR */
.CodeMirror-cursor {
    border-left: 1px solid var(--stroke-main-inverted);
    border-right: none;
    width: 0;
}

/* Shown when moving in bi-directional text */
.CodeMirror div.CodeMirror-secondarycursor {
    border-left: 1px solid var(--stroke-mid-grey);
}
.cm-fat-cursor .CodeMirror-cursor {
    width: auto;
    border: 0 !important;
    background: #7e7;
}
.cm-fat-cursor div.CodeMirror-cursors {
    z-index: 1;
}
.cm-fat-cursor-mark {
    background-color: var(--secondary-green);
    -webkit-animation: blink 1.06s steps(1) infinite;
    animation: blink 1.06s steps(1) infinite;
}
.cm-animate-fat-cursor {
    width: auto;
    border: 0;
    -webkit-animation: blink 1.06s steps(1) infinite;
    animation: blink 1.06s steps(1) infinite;
    background-color: var(--secondary-green);
}
@-webkit-keyframes blink {
    50% {
        background-color: transparent;
    }
}
@keyframes blink {
    50% {
        background-color: transparent;
    }
}

/* Can style cursor different in overwrite (non-insert) mode */
.cm-tab {
    display: inline-block;
    text-decoration: inherit;
}
.CodeMirror-rulers {
    position: absolute;
    left: 0;
    right: 0;
    top: -50px;
    bottom: 0;
    overflow: hidden;
}
.CodeMirror-ruler {
    border-left: 1px solid #ccc;
    top: 0;
    bottom: 0;
    position: absolute;
}

/* DEFAULT THEME */
.cm-s-default .cm-header {
    color: blue;
}
.cm-s-default .cm-quote {
    color: #090;
}
.cm-negative {
    color: #d44;
}
.cm-positive {
    color: #292;
}
.cm-header,
.cm-strong {
    font-weight: bold;
}
.cm-em {
    font-style: italic;
}
.cm-link {
    text-decoration: underline;
}
.cm-strikethrough {
    text-decoration: line-through;
}
.cm-s-default .cm-keyword {
    color: #708;
}
.cm-s-default .cm-atom {
    color: #219;
}
.cm-s-default .cm-number {
    color: #164;
}
.cm-s-default .cm-def {
    color: #00f;
}
.cm-s-default .cm-variable-2 {
    color: #05a;
}
.cm-s-default .cm-variable-3,
.cm-s-default .cm-type {
    color: #085;
}
.cm-s-default .cm-comment {
    color: #a50;
}
.cm-s-default .cm-string {
    color: #a11;
}
.cm-s-default .cm-string-2 {
    color: #f50;
}
.cm-s-default .cm-meta {
    color: #555;
}
.cm-s-default .cm-qualifier {
    color: #555;
}
.cm-s-default .cm-builtin {
    color: #30a;
}
.cm-s-default .cm-bracket {
    color: #997;
}
.cm-s-default .cm-tag {
    color: #170;
}
.cm-s-default .cm-attribute {
    color: #00c;
}
.cm-s-default .cm-hr {
    color: #999;
}
.cm-s-default .cm-link {
    color: #00c;
}
.cm-s-default .cm-error {
    color: #f00;
}
.cm-invalidchar {
    color: #f00;
}
.CodeMirror-composing {
    border-bottom: 2px solid;
}

/* Default styles for common addons */
div.CodeMirror span.CodeMirror-matchingbracket {
    color: #0b0;
}
div.CodeMirror span.CodeMirror-nonmatchingbracket {
    color: #a22;
}
.CodeMirror-matchingtag {
    background: rgba(255, 150, 0, 0.3);
}
.CodeMirror-activeline-background {
    background: #e8f2ff;
}
/* STOP */

/* The rest of this file contains styles related to the mechanics of
   the editor. You probably shouldn't touch them. */
.CodeMirror {
    position: relative;
    overflow: hidden;
}
.CodeMirror-scroll {
    box-sizing: border-box;
    overflow: scroll !important;
    padding: 20px 0;
    height: 100%;
    outline: none;
    position: relative;
    -ms-overflow-style: none;
    scrollbar-width: none;
}
.CodeMirror-scroll::-webkit-scrollbar {
  display: none;
}
.CodeMirror-sizer {
    position: relative;
    border-right: 30px solid transparent;
}

/* The fake, visible scrollbars. Used to force redraw during scrolling
   before actual scrolling happens, thus preventing shaking and
   flickering artifacts. */
.CodeMirror-vscrollbar,
.CodeMirror-hscrollbar,
.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
    position: absolute;
    z-index: 6;
    display: none;
}
.CodeMirror-vscrollbar {
    right: 0;
    top: 0;
    overflow-x: hidden;
    overflow-y: scroll;
}
.CodeMirror-hscrollbar {
    bottom: 0;
    left: 0;
    overflow-y: hidden;
    overflow-x: scroll;
}
.CodeMirror-scrollbar-filler {
    right: 0;
    bottom: 0;
}
.CodeMirror-gutter-filler {
    left: 0;
    bottom: 0;
}
.CodeMirror-gutters {
    position: absolute;
    left: 0;
    top: 0;
    min-height: 100%;
    z-index: 3;
}
.CodeMirror-gutter {
    white-space: normal;
    height: 100%;
    display: inline-block;
    vertical-align: top;
    margin-bottom: -30px;
}
.CodeMirror-gutter-wrapper {
    position: absolute;
    z-index: 4;
    background: none !important;
    border: none !important;
}
.CodeMirror-gutter-background {
    position: absolute;
    top: 0;
    bottom: 0;
    z-index: 4;
}
.CodeMirror-gutter-elt {
    position: absolute;
    cursor: default;
    z-index: 4;
}
.CodeMirror-gutter-wrapper::selection {
    background-color: transparent;
}
.CodeMirror-gutter-wrapper::-moz-selection {
    background-color: transparent;
}

/* Force widget margins to stay inside of the container */
.CodeMirror-lines {
    cursor: text;
    min-height: 1px;
}

/* Reset some styles that the rest of the page might have set */
.CodeMirror pre.CodeMirror-line,
.CodeMirror pre.CodeMirror-line-like {
    border-radius: 0;
    border-width: 0;
    background: transparent;
    font-family: inherit;
    font-size: inherit;
    margin: 0;
    white-space: pre;
    word-wrap: normal;
    line-height: inherit;
    color: inherit;
    z-index: 2;
    position: relative;
    overflow: visible;
    -webkit-tap-highlight-color: transparent;
    -webkit-font-variant-ligatures: contextual;
    font-variant-ligatures: contextual;
}
.CodeMirror-wrap pre.CodeMirror-line,
.CodeMirror-wrap pre.CodeMirror-line-like {
    word-wrap: break-word;
    white-space: pre-wrap;
    word-break: normal;
}
.CodeMirror-linebackground {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    z-index: 0;
}
.CodeMirror-linewidget {
    position: relative;
    z-index: 2;

    /* Force widget margins to stay inside of the container */
    padding: 0.1px;
}
.CodeMirror-rtl pre {
    direction: rtl;
}
.CodeMirror-code {
    outline: none;
}
.CodeMirror-measure {
    position: absolute;
    width: 100%;
    height: 0;
    overflow: hidden;
    visibility: hidden;
}
.CodeMirror-cursor {
    position: absolute;
    pointer-events: none;
}
.CodeMirror-measure pre {
    position: static;
}
div.CodeMirror-cursors {
    visibility: hidden;
    position: relative;
    z-index: 3;
}
div.CodeMirror-dragcursors {
    visibility: visible;
}
.CodeMirror-focused div.CodeMirror-cursors {
    visibility: visible;
}
.CodeMirror-crosshair {
    cursor: crosshair;
}
.CodeMirror-selected,
.CodeMirror-focused .CodeMirror-selected,
.CodeMirror-line::selection,
.CodeMirror-line > span::selection,
.CodeMirror-line > span > span::selection {
    background: var(--secondary-green);
    opacity: 0.3;
}

/* Used to force a border model for a node */
.cm-force-border {
    padding-right: 0.1px;
}

/* Custom code mirror srollbar styling */
.CodeMirror-overlayscroll-horizontal,
.CodeMirror-overlayscroll-vertical {
    width: 8px;
    height: calc(100% - 8px);
    right: 0;
    position: absolute;
    top: 0;
    z-index: 6;
    background-color: var(--scroll-bar-background);
    border-radius: 4px;
    opacity: 0;
    transition: opacity 200ms ease-in-out;
}
.CodeMirror-overlayscroll:hover .CodeMirror-overlayscroll-horizontal,
.CodeMirror-overlayscroll:hover .CodeMirror-overlayscroll-vertical,
.CodeMirror-overlayscroll .CodeMirror-overlayscroll-horizontal:active,
.CodeMirror-overlayscroll .CodeMirror-overlayscroll-vertical:active,
.CodeMirror-overlayscroll.CodeMirror-focused .CodeMirror-overlayscroll-horizontal,
.CodeMirror-overlayscroll.CodeMirror-focused .CodeMirror-overlayscroll-vertical {
    opacity: 1;
}
.mobile .CodeMirror-overlayscroll .CodeMirror-overlayscroll-horizontal,
.mobile .CodeMirror-overlayscroll-vertical {
    opacity: 1;
}
.CodeMirror-wrap .CodeMirror-overlayscroll-vertical {
    height: 100%;
}
.CodeMirror-overlayscroll-horizontal {
    width: auto;
    height: 8px;
    bottom: 0;
    left: 0;
    right: auto;
    top: auto;
}
.CodeMirror-overlayscroll-horizontal div,
.CodeMirror-overlayscroll-vertical div {
    cursor: pointer;
    position: absolute;
    background: var(--scroll-bar-handle);
    border-radius: 4px;
    opacity: 0.5;
    width: 100%;
    height: 100%;
}
.CodeMirror-overlayscroll-horizontal div:hover,
.CodeMirror-overlayscroll-vertical div:hover,
.CodeMirror-overlayscroll-horizontal div:active,
.CodeMirror-overlayscroll-vertical div:active {
    opacity: 0.7;
}
.mobile .CodeMirror-overlayscroll-horizontal div {
    opacity: 0.7;
}

@media print {

    /* Hide the cursor when printing */
    .CodeMirror div.CodeMirror-cursors {
        visibility: hidden;
    }
    .CodeMirror-overlayscroll-horizontal,
    .CodeMirror-overlayscroll-vertical {
        display: none;
    }
}

/* See issue #2901 */
.cm-tab-wrap-hack::after {
    content: '';
}

/* Help users use markselection to safely style text background */
span.CodeMirror-selectedtext {
    background: none;
}
